// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Introspector chinook example database 1`] = `
"type Album {
  id: Int! @pgColumn(name: \\"AlbumId\\") @unique
  ArtistId: Artist!
  Title: String!
  track: [Track]
}

type Artist {
  id: Int! @pgColumn(name: \\"ArtistId\\") @unique
  album: [Album]
  Name: String
}

type Customer {
  id: Int! @pgColumn(name: \\"CustomerId\\") @unique
  Address: String
  City: String
  Company: String
  Country: String
  Email: String!
  Fax: String
  FirstName: String!
  invoice: [Invoice]
  LastName: String!
  Phone: String
  PostalCode: String
  State: String
  SupportRepId: Employee
}

type Employee {
  id: Int! @pgColumn(name: \\"EmployeeId\\") @unique
  Address: String
  BirthDate: DateTime
  City: String
  Country: String
  customer: [Customer]
  Email: String
  employee: [Employee]
  Fax: String
  FirstName: String!
  HireDate: DateTime
  LastName: String!
  Phone: String
  PostalCode: String
  ReportsTo: Employee
  State: String
  Title: String
}

type Genre {
  id: Int! @pgColumn(name: \\"GenreId\\") @unique
  Name: String
  track: [Track]
}

type Invoice {
  id: Int! @pgColumn(name: \\"InvoiceId\\") @unique
  BillingAddress: String
  BillingCity: String
  BillingCountry: String
  BillingPostalCode: String
  BillingState: String
  CustomerId: Customer!
  InvoiceDate: DateTime!
  invoiceLine: [InvoiceLine]
  Total: Float!
}

type InvoiceLine {
  id: Int! @pgColumn(name: \\"InvoiceLineId\\") @unique
  InvoiceId: Invoice!
  Quantity: Int!
  TrackId: Track!
  UnitPrice: Float!
}

type MediaType {
  id: Int! @pgColumn(name: \\"MediaTypeId\\") @unique
  Name: String
  track: [Track]
}

type Playlist {
  id: Int! @pgColumn(name: \\"PlaylistId\\") @unique
  Name: String
  playlistTrack: [PlaylistTrack]
}

type PlaylistTrack @linkTable {
  PlaylistId: Playlist!
  TrackId: Track!
}

type Track {
  id: Int! @pgColumn(name: \\"TrackId\\") @unique
  AlbumId: Album
  Bytes: Int
  Composer: String
  GenreId: Genre
  invoiceLine: [InvoiceLine]
  MediaTypeId: MediaType!
  Milliseconds: Int!
  Name: String!
  playlistTrack: [PlaylistTrack]
  UnitPrice: Float!
}"
`;

exports[`Introspector chinook example database 2`] = `
"type Album {
  AlbumId: Int! @id(strategy: NONE)
  ArtistId: Artist!
  Title: String!
  track: [Track]
}

type Artist {
  ArtistId: Int! @id(strategy: NONE)
  album: [Album]
  Name: String
}

type Customer {
  CustomerId: Int! @id(strategy: NONE)
  Address: String
  City: String
  Company: String
  Country: String
  Email: String!
  Fax: String
  FirstName: String!
  invoice: [Invoice]
  LastName: String!
  Phone: String
  PostalCode: String
  State: String
  SupportRepId: Employee
}

type Employee {
  EmployeeId: Int! @id(strategy: NONE)
  Address: String
  BirthDate: DateTime
  City: String
  Country: String
  customer: [Customer]
  Email: String
  employee: [Employee]
  Fax: String
  FirstName: String!
  HireDate: DateTime
  LastName: String!
  Phone: String
  PostalCode: String
  ReportsTo: Employee
  State: String
  Title: String
}

type Genre {
  GenreId: Int! @id(strategy: NONE)
  Name: String
  track: [Track]
}

type Invoice {
  InvoiceId: Int! @id(strategy: NONE)
  BillingAddress: String
  BillingCity: String
  BillingCountry: String
  BillingPostalCode: String
  BillingState: String
  CustomerId: Customer!
  InvoiceDate: DateTime!
  invoiceLine: [InvoiceLine]
  Total: Float!
}

type InvoiceLine {
  InvoiceLineId: Int! @id(strategy: NONE)
  InvoiceId: Invoice!
  Quantity: Int!
  TrackId: Track!
  UnitPrice: Float!
}

type MediaType {
  MediaTypeId: Int! @id(strategy: NONE)
  Name: String
  track: [Track]
}

type Playlist {
  PlaylistId: Int! @id(strategy: NONE)
  Name: String
  playlistTrack: [PlaylistTrack]
}

type PlaylistTrack @linkTable {
  PlaylistId: Playlist!
  TrackId: Track!
}

type Track {
  TrackId: Int! @id(strategy: NONE)
  AlbumId: Album
  Bytes: Int
  Composer: String
  GenreId: Genre
  invoiceLine: [InvoiceLine]
  MediaTypeId: MediaType!
  Milliseconds: Int!
  Name: String!
  playlistTrack: [PlaylistTrack]
  UnitPrice: Float!
}"
`;
