type Query {
  usersConnection(where: UserWhereInput): UserConnection
  housesConnection(where: HouseWhereInput): HouseConnection
}

input UserWhereInput {
  id: ID!
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type UserEdge {
  node: User!
  cursor: String!
}

type AggregateUser {
  count: Int!
}

input HouseWhereInput {
      id: ID!
}

type HouseConnection {
  pageInfo: PageInfo!
  edges: [HouseEdge]!
  aggregate: AggregateHouse!
}

type HouseEdge {
  node: House!
  cursor: String!
}

type AggregateHouse {
  count: Int!
}

type User {
  house: House!
}

type House {
  id: ID!
  name: String!
  user: User!
}